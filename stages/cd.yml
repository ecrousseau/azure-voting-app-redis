parameters:
- name: resourceGroup
  type: string
- name: aksCluster
  type: string
- name: serviceConnection
  type: string
  
#get artifact
#create imagepullsecret
#deploy, overriding container

stages:
- stage: CD
  dependsOn: CI
  jobs:
  - deployment: DeployToAKS
    displayName: Deploy to AKS
    environment: aks
    variables:
      manifestName: $[ stageDependencies.CI.BuildAndPush.outputs['ManifestName.value'] ]
    strategy:
      runOnce:
        deploy:
        - pwsh: |
            ls
            ls *
            ls *\*
        #- task: AzureCLI@2
        #  displayName: Get AKS credentials
        #  inputs:
        #    azureSubscription: ${{ parameters.serviceConnection }}
        #    scriptType: bash
        #    scriptLocation: inlineScript
        #    inlineScript: |
        #      az aks get-credentials --resource-group $(RESOURCE_GROUP) --name $(AKS_CLUSTER_NAME)
        - task: Kubernetes@1
          inputs:
            connectionType: Azure Resource Manager
            azureSubscriptionEndpoint: ${{ parameters.serviceConnection }}
            azureResourceGroup: ${{ parameters.resourceGroup }}
            kubernetesCluster: ${{ parameters.aksCluster }}
            namespace: azure-vote
            command: apply
            arguments: -f $(manifestName)