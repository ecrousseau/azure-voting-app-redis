parameters:
- name: resourceGroup
  type: string
- name: aksCluster
  type: string
- name: serviceConnection
  type: string
- name: containerRegistry
  type: string
- name: containerRepository
  type: string
- name: kubernetesNamespace
  type: string
  
#get artifact
#create imagepullsecret
#deploy, overriding container and secret

stages:
- stage: CD
  dependsOn: CI
  jobs:
  - deployment: DeployToAKS
    displayName: Deploy to AKS
    environment: aks
    variables:
      manifestName: $[ stageDependencies.CI.BuildAndPush.outputs['ManifestName.value'] ]
    strategy:
      runOnce:
        deploy:
          steps:
          - pwsh: |
              yq 'select(.kind != "Deployment" or .metadata.name != "azure-vote-front")' $(manifestName) > temp.yaml
              Write-Output "---" >> temp.yaml
              yq 'select(.kind == "Deployment" and .metadata.name == "azure-vote-front") | .spec.template.spec.containers[0].image = "${{ parameters.containerRegistry }}/${{ parameters.containerRepository }}:$(Build.BuildId)" | .spec.template.spec.imagePullSecrets[0] = {"name": "image-pull-secret"}' $(manifestName) >> temp.yaml
          - task: Kubernetes@1
            displayName: Apply manifest
            inputs:
              connectionType: Azure Resource Manager
              azureSubscriptionEndpoint: ${{ parameters.serviceConnection }}
              azureResourceGroup: ${{ parameters.resourceGroup }}
              kubernetesCluster: ${{ parameters.aksCluster }}
              namespace: ${{ parameters.kubernetesNamespace }}
              command: apply
              arguments: -f temp.yaml
              secretType: dockerRegistry
              containerRegistryType: Azure Container Registry
              azureSubscriptionEndpointForSecrets: ${{ parameters.serviceConnection }}
              azureContainerRegistry: ${{ parameters.containerRegistry }}
              secretName: image-pull-secret
              forceUpdate: true